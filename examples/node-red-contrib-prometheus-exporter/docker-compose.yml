version: '3.7'


volumes:
  prometheus-data:
  grafana-data:

services:  


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080

  prometheus:
    image: prom/prometheus:v2.4.3
    restart: always
    volumes:
      - ./etc/prometheus/:/etc/prometheus/
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - ${PROMETHEUS_PORT:-9090}:9090

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    volumes:
      # - ./etc/grafana:/etc/grafana
      # - ./var/lib/grafana:/var/lib/grafana
      # - ./var/log/grafana:/var/log/grafana
      - grafana-data:/var/lib/grafana
      - ./etc/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:-default}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-password}
    env_file:
      - .env

  nodered:
    #image: kalemena/node-red:latest
    build: .
    restart: always
    ports:
     - "${NODERED_PORT:-1880}:1880"
    volumes:
     - .:/data
     # - ./workspace/nodered:/home/nodered/.node-red
     # - ./workspace/log:/var/log
    environment:
     FLOWS: /data/flows.json
     NODERED_CREDENTIAL_SECRETS: ${NODERED_CREDENTIAL_SECRETS:-xoxoxoxo}
     